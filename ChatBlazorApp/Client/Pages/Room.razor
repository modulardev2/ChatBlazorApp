@page "/{RoomName}"
@using ChatBlazorApp.Shared
@using Microsoft.AspNetCore.SignalR.Client
@inject HttpClient Http

<p>@AppState.UserName</p>

<div class="form-group">
	<label>
		Message:
		<input @bind="messageInput" size="50" />
	</label>
</div>
<button @onclick="Send" disabled="@(HubConnection.State != HubConnectionState.Connected)">Send</button>

<hr>

<ul id="messagesList">
	@foreach (var message in messages)
	{
		<li>@message</li>
	}
</ul>

@code {
	[Parameter] public string RoomName { get; set; }
	[CascadingParameter] public Microsoft.AspNetCore.SignalR.Client.HubConnection HubConnection { get; set; }

	private List<string> messages = new List<string>();
	private string userInput;
	private string messageInput;

	protected override async Task OnParametersSetAsync()
	{
		messages.Clear();
		userInput = "";
		messageInput = "";

		AppState.CurrentRoom = this;

		var previousChats = await Http.GetFromJsonAsync<ChatData[]>($"Chat/{RoomName}");

		if (previousChats != null)
		{
			foreach (var previousChat in previousChats)
			{
				var encodedMsg = $"{previousChat.User}: {previousChat.Message}";
				messages.Add(encodedMsg);
			}
		}
	}

	public void ReceiveMessage(string message)
	{
		messages.Add(message);
		StateHasChanged();
	}

	Task Send() =>
		HubConnection.SendAsync("SendMessage", AppState.UserName, messageInput, RoomName);

}